What is the database in DBgenerate.py for? 
From what I can gather from skimming is that this runs calculations on cocalc?
Some of the functions that generate mol objects in rdkit are not present since rdkit is imported but never used.
For now, I'll work on translating the notebooks to python and making them more general.

There is no selection for the "best" conformer as in some of the other jupyter notebooks. This can be added soon, just seeing utility of the current suite of command-line aruments.
-->AllChem.MMFFOptimizeMolecule(pol_h, maxIters=1000) #does this repeated optimization obviate the need for the bestConformer function (copied from polymer LogP v4_4_4_alla*)

Do we want to highlight parts of the molecule?
https://www.rdkit.org/docs/Cookbook.html#highlight-a-substructure-in-a-molecule

I will delete notebooks no longer needed since they will not be in the final product and they are still on cocalc.

TODO

More details about packaging.

See what functionality there is in the crossover notebooks.

Branching? Temp? Pressure? Diferentiate between single polymer and bulk?

For several configurations the current setup works. However, python3 MakePolymer.py -n 2 -m Styrene -i Benzyl -t Methoxy -v does not. 
The intermediate smiles produced afer adding the initiator group is gross: c1ccc(CCC(CCc2ccccc2)c2ccccc2)cc1. Maybe instead of adding asterixes\
to polymer body one at a time we use some outlandish element to act as a place-holder for at least one insertion point so we don't have to rely
on rdkit's smiles-writing skills